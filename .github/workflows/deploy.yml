name: github pages

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Install dependencies for building docs
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libgl1 libglx-mesa0
      - name: Set up Python
        uses: actions/setup-python@main
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_HOME=/opt/poetry python3 -
          echo "/opt/poetry/bin" >> $GITHUB_PATH
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install --no-interaction
      - name: Build documentation
        run: make document
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build/html/
          retention-days: 1

  deploy:
    needs: build
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action