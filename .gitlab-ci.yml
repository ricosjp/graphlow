stages:
  - test
  - deploy

default:
  image: python:3.11-slim
  before_script:
    - apt update
    - apt install -y make
    - pip install poetry
    - poetry config virtualenvs.in-project false
    - make init

lint:
  stage: test
  script:
    - make lint
  tags:
    - no-gpu

pytest:
  stage: test
  script:
    - poetry run pytest tests --cov=src --cov-report term-missing --capture=no
    - poetry run python3 -m coverage html -d coverage
    - poetry run python3 -m coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    expose_as: coverage
    paths:
      - coverage/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  tags:
    - gpu
    - GenuineIntel
    - avx2
    - cpu-ge-8
    - mem-ge-32gb

pages:
  stage: deploy
  script:
    - apt install -y xvfb libgl1-mesa-glx
    - make document
    - mkdir public
    - mv docs/build/html/* public/
  artifacts:
    paths:
      - public
  only:
    - main
    - develop
    - issue/add_docs


.deploy:wheel:
  stage: deploy
  script:
    - poetry version $VERSION
    - poetry config repositories.ricos https://pypi.ritc.jp
    - poetry build -f wheel
    - poetry publish --username ricos --password $RICOS_PYPI_KEY -r ricos --no-ansi -n -v
    - poetry publish --username __token__ --password $PYPI_PUBLISH_TOKEN --no-ansi -n -v


deploy:wheel:tags:
  image: python:3.11-slim
  extends: .deploy:wheel
  before_script:
    - pip install poetry
    - export VERSION=$CI_COMMIT_REF_NAME
  only:
    - tags
